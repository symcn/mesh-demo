apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: local-dubbo-listener
  namespace: istio-system
spec:
  workload_selector:
    labels:
      app: comsumer
  configPatches:
    - applyTo: LISTENER
#      match:
#        context: SIDECAR_OUTBOUND
#        match:w
#          listener:
#            name: virtualOutbound
#        proxy:
#          proxyVersion: ^1\.5.*
      patch:
        operation: ADD
        value:
          name: local_proxy_20880
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 20880
          trafficDirection: OUTBOUND
          filter_chains:
            - filters:
                - name: envoy.filters.network.wasm
                  typedConfig:
                    "@type": type.googleapis.com/udpa.type.v1.TypedStruct
                    typeUrl: type.googleapis.com/envoy.config.filter.network.wasm.v2.Wasm
                    value:
                      config:
                        configuration: |
                          {
                            "debug": "true",
                            "stat_prefix": "istio",
                          }
                        root_id: stats_outbound
                        vm_config:
                          code:
                            local:
                              inline_string: envoy.wasm.stats
                          runtime: envoy.wasm.runtime.null
                          vm_id: stats_outbound
                - name: envoy.filters.network.dubbo_proxy
                  typed_config:
                    "@type": type.googleapis.com/envoy.config.filter.network.dubbo_proxy.v2alpha1.DubboProxy
                    stat_prefix: dubbo_incomming_stats
                    protocol_type: Dubbo
                    serialization_type: Hessian2
                    route_config:
                      - name: local_route_user
                        interface: UserProvider
                        routes:
                          - match:
                              method:
                                name:
                                  safe_regex:
                                    google_re2: {}
                                    regex: "(.*?)"
                            route:
                              cluster: outbound|20880||user-provider.mesh-demo.svc.cluster.local
                      - name: local_route_order
                        interface: OrderProvider
                        routes:
                          - match:
                              method:
                                name:
                                  safe_regex:
                                    google_re2: {}
                                    regex: .*
                            route:
                              cluster: outbound|20880||order-provider.mesh-demo.svc.cluster.local
                    dubbo_filters:
                      - name: envoy.filters.dubbo.router
